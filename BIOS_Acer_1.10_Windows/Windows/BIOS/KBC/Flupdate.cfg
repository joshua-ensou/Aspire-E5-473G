#Modified in 2009/08/17

[START CONFIG]
# MXIC MX25L2005C
# ---------------
FLASH_ID    = 0x11C2       # Device ID & Manufacture 
FLASH_SIZE  = 256          # (256K) Flash size in KBytes
SECTOR_DEF  = 64:4K        # 32 sectors of 4K
                           # The format is: n:sK,n:sK,....,n:sK
                           # n - number of sectors
                           # s - size of sectors
BLOCK_SIZE  = 64           # (64K) block size in Kbytes. If block erase is not supported then
                           # block size should be equal to FLASH_SIZE
PAGE_SIZE   = 256          # Page size in bytes
PROG_SIZE   = 0xFF         # Max number of bytes that can be program at on time. FF --> means page size
READ_DEV_ID_TYPE = 0       # Read Device ID type.
                           # There are two ways to read the flash ID (depending on the flash type). 
                           # A. Send the "Read ID" op-code, send 3 dummy address bytes and then read the ID bytes 
                           # B. Send the "Read ID" op-code and immediately read the ID bytes.
                           # When the value in this field is 0x47, method B is used. Otherwise 
                           # (any other value) method A is used.

# Define spi Flash commands 
# --------------------------
CMD_READ_DEV_ID   = 0x90   # Read device ID command.
CMD_WRITE_STAT_EN = 0x06   # Enable write to status register
CMD_WRITE_EN      = 0x06   # Write enable
CMD_READ_STAT     = 0x05   # Read status register
CMD_WRITE_STAT    = 0x01   # Write status register
CMD_PROG          = 0x02   # Page program, or byte program.
CMD_SECTOR_ERASE  = 0x20   # Sector erase
CMD_BLOCK_ERASE   = 0xD8   # Block erase

# Define device busy bits in status register
# -------------------------------------------
STATUS_BUSY_MASK  = 0x01   # Location (by mask) of busy bit located in the status register 
STATUS_REG_VAL    = 0x00   # Value of status register busy bit , when device is not busy. 
                           # The device is considered not busy when:
                           # [status register value] & STATUS_BUSY_MASK = STATUS_REG_VAL  
# Define the protected sectors.
# -----------------------------
PROTECTED_SECTORS   = 32-63 # Protected sectors (0 to 4)
[END CONFIG]

[START CONFIG]
# SST 25LF020A 2MBit
# ---------------
FLASH_ID    = 0x43BF       # Device ID & Manufacture 
FLASH_SIZE  = 256          # (0.5M) Flash size in KBytes
SECTOR_DEF  = 64:4K        # 128 sectors of 4K
                           # The format is: n:sK,n:sK,....,n:sK
                           # n - number of sectors
                           # s - size of sectors
BLOCK_SIZE  = 32           # (32K) block size in Kbytes. If block erase is not supported then
                           # block size should be equal to FLASH_SIZE
PAGE_SIZE   = 1            # Page size in bytes
PROG_SIZE   = 1            # Max number of bytes that can be program at on time. FF --> means page size
READ_DEV_ID_TYPE = 0       # Read Device ID type. Read with/without Dummy

# Define spi Flash commands 
# --------------------------
CMD_READ_DEV_ID   = 0x90   # Read device ID command.
CMD_WRITE_STAT_EN = 0x50   # Enable write to status register
CMD_WRITE_EN      = 0x06   # Write enable
CMD_READ_STAT     = 0x05   # Read status register
CMD_WRITE_STAT    = 0x01   # Write status register
CMD_PROG          = 0x02   # Page program, or byte program.
CMD_SECTOR_ERASE  = 0x20   # Sector erase
CMD_BLOCK_ERASE   = 0x52   # Block erase

# Define device busy bits in status register
# -------------------------------------------
STATUS_BUSY_MASK  = 0x01   # Location (by mask) of busy bit located in the status register 
STATUS_REG_VAL    = 0x00   # Value of status register busy bit, when device is not busy. 
                           # The device is considered not busy when:
                           # [status register value] & STATUS_BUSY_MASK = STATUS_REG_VAL  
# Define the protected sectors.
# -----------------------------
PROTECTED_SECTORS   = 32-63 # Protected sectors (0 to 1)
[END CONFIG]

[START CONFIG]
# CHINGIS PM25LV020
# ---------------
FLASH_ID    = 0x7F9D       # Device ID & Manufacture 
FLASH_SIZE  = 256          # (128K) Flash size in KBytes
SECTOR_DEF  = 64:4K        # 32 sectors of 4K
                           # The format is: n:sK,n:sK,....,n:sK
                           # n - number of sectors
                           # s - size of sectors
BLOCK_SIZE  = 32           # (64K) block size in Kbytes. If block erase is not supported then
                           # block size should be equal to FLASH_SIZE
PAGE_SIZE   = 256          # Page size in bytes
PROG_SIZE   = 0xFF         # Max number of bytes that can be program at on time. FF --> means page size
READ_DEV_ID_TYPE = 0       # Read Device ID type.
                           # There are two ways to read the flash ID (depending on the flash type). 
                           # A. Send the "Read ID" op-code, send 3 dummy address bytes and then read the ID bytes 
                           # B. Send the "Read ID" op-code and immediately read the ID bytes.
                           # When the value in this field is 0x47, method B is used. Otherwise 
                           # (any other value) method A is used.

# Define spi Flash commands 
# --------------------------
CMD_READ_DEV_ID   = 0x9F   # Read device ID command.
CMD_WRITE_STAT_EN = 0x06   # Enable write to status register
CMD_WRITE_EN      = 0x06   # Write enable
CMD_READ_STAT     = 0x05   # Read status register
CMD_WRITE_STAT    = 0x01   # Write status register
CMD_PROG          = 0x02   # Page program, or byte program.
CMD_SECTOR_ERASE  = 0xD7   # Sector erase
CMD_BLOCK_ERASE   = 0xD8   # Block erase

# Define device busy bits in status register
# -------------------------------------------
STATUS_BUSY_MASK  = 0x01   # Location (by mask) of busy bit located in the status register 
STATUS_REG_VAL    = 0x00   # Value of status register busy bit , when device is not busy. 
                           # The device is considered not busy when:
                           # [status register value] & STATUS_BUSY_MASK = STATUS_REG_VAL  
# Define the protected sectors.
# -----------------------------
PROTECTED_SECTORS   = 32-63 # Protected sectors (0 to 4)
[END CONFIG]

[START CONFIG]
# CHINGIS PM25LV020C
# ---------------
FLASH_ID    = 0x119D       # Device ID & Manufacture 
FLASH_SIZE  = 256          # (128K) Flash size in KBytes
SECTOR_DEF  = 64:4K        # 32 sectors of 4K
                           # The format is: n:sK,n:sK,....,n:sK
                           # n - number of sectors
                           # s - size of sectors
BLOCK_SIZE  = 64           # (64K) block size in Kbytes. If block erase is not supported then
                           # block size should be equal to FLASH_SIZE
PAGE_SIZE   = 256          # Page size in bytes
PROG_SIZE   = 0xFF         # Max number of bytes that can be program at on time. FF --> means page size
READ_DEV_ID_TYPE = 0       # Read Device ID type.
                           # There are two ways to read the flash ID (depending on the flash type). 
                           # A. Send the "Read ID" op-code, send 3 dummy address bytes and then read the ID bytes 
                           # B. Send the "Read ID" op-code and immediately read the ID bytes.
                           # When the value in this field is 0x47, method B is used. Otherwise 
                           # (any other value) method A is used.

# Define spi Flash commands 
# --------------------------
CMD_READ_DEV_ID   = 0x90   # Read device ID command.
CMD_WRITE_STAT_EN = 0x06   # Enable write to status register
CMD_WRITE_EN      = 0x06   # Write enable
CMD_READ_STAT     = 0x05   # Read status register
CMD_WRITE_STAT    = 0x01   # Write status register
CMD_PROG          = 0x02   # Page program, or byte program.
CMD_SECTOR_ERASE  = 0xD7   # Sector erase
CMD_BLOCK_ERASE   = 0xD8   # Block erase

# Define device busy bits in status register
# -------------------------------------------
STATUS_BUSY_MASK  = 0x01   # Location (by mask) of busy bit located in the status register 
STATUS_REG_VAL    = 0x00   # Value of status register busy bit , when device is not busy. 
                           # The device is considered not busy when:
                           # [status register value] & STATUS_BUSY_MASK = STATUS_REG_VAL  
# Define the protected sectors.
# -----------------------------
PROTECTED_SECTORS   = 32-63 # Protected sectors (0 to 4)
[END CONFIG]

[START CONFIG]
# AMIC A25L020
# ---------------
FLASH_ID    = 0x1137       # Device ID & Manufacture 
FLASH_SIZE  = 256          # (128K) Flash size in KBytes
SECTOR_DEF  = 32:4K        # 32 sectors of 4K
                           # The format is: n:sK,n:sK,....,n:sK
                           # n - number of sectors
                           # s - size of sectors
BLOCK_SIZE  = 64           # (64K) block size in Kbytes. If block erase is not supported then
                           # block size should be equal to FLASH_SIZE
PAGE_SIZE   = 256          # Page size in bytes
PROG_SIZE   = 0xFF         # Max number of bytes that can be program at on time. FF --> means page size
READ_DEV_ID_TYPE = 0       # Read Device ID type.
                           # There are two ways to read the flash ID (depending on the flash type). 
                           # A. Send the "Read ID" op-code, send 3 dummy address bytes and then read the ID bytes 
                           # B. Send the "Read ID" op-code and immediately read the ID bytes.
                           # When the value in this field is 0x47, method B is used. Otherwise 
                           # (any other value) method A is used.

# Define spi Flash commands 
# --------------------------
CMD_READ_DEV_ID   = 0x90   # Read device ID command.
CMD_WRITE_STAT_EN = 0x06   # Enable write to status register
CMD_WRITE_EN      = 0x06   # Write enable
CMD_READ_STAT     = 0x05   # Read status register
CMD_WRITE_STAT    = 0x01   # Write status register
CMD_PROG          = 0x02   # Page program, or byte program.
CMD_SECTOR_ERASE  = 0x20   # Sector erase
CMD_BLOCK_ERASE   = 0xD8   # Block erase

# Define device busy bits in status register
# -------------------------------------------
STATUS_BUSY_MASK  = 0x01   # Location (by mask) of busy bit located in the status register 
STATUS_REG_VAL    = 0x00   # Value of status register busy bit , when device is not busy. 
                           # The device is considered not busy when:
                           # [status register value] & STATUS_BUSY_MASK = STATUS_REG_VAL  
# Define the protected sectors.
# -----------------------------
PROTECTED_SECTORS   = 32-63 # Protected sectors (0 to 4)
[END CONFIG]